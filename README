# Project
* CS 452
* HW4
* 3/27/2024
* Tyler Bowes
****************

# Overview

This program is a fully completed implementation of the Whack-a-Mole program 
utilizing a safe implementation of multi-threaded functions and data structures.
the current implementation only has a wrapper for two main functions but methods
used for wrapping can easily be coppied and implented for other functions. Only these
functions were wrapped do create simplicity in the program since they are the only ones
used. 

# Included Files

README
GNUmakefile
exec (folder)
    deq.c
    deq.h    
    GNUmakefile
    error.h
    fltk.supp
    GDB-threads
    lawn.c
    lawn.h
    lawnimp.cc
    lawnimp.h
    linkage.h
    main.c
    mole.c
    mole.h
    threads.c
    threads.h
    vg
    wrapper.c
    wrapper.h


# Testing/Test Suit

Testing I printed the deq in the command line and made sure it was updating correctly.
Ex. when a put or get method is called I would make sure that the length is updated accordingly.
Once this was achieved and there was no inconsistincies or anything that could
cause the program to crash it was complete.

# Compiling

To compile and run the program go inside the 'exec' folder and run "make"
in the commandline.  

Once compiled, you can run "wam" to start the Whack-a-Mole program.

# Valgrind

$ valgrind wam
==4028390== Memcheck, a memory error detector
==4028390== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==4028390== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==4028390== Command: wam
==4028390==
==4028390==
==4028390== HEAP SUMMARY:
==4028390==     in use at exit: 709,837 bytes in 1,124 blocks
==4028390==   total heap usage: 14,094 allocs, 12,970 frees, 2,800,425 bytes allocated
==4028390==
==4028390== LEAK SUMMARY:
==4028390==    definitely lost: 0 bytes in 0 blocks
==4028390==    indirectly lost: 0 bytes in 0 blocks
==4028390==      possibly lost: 0 bytes in 0 blocks
==4028390==    still reachable: 709,837 bytes in 1,124 blocks
==4028390==         suppressed: 0 bytes in 0 blocks
==4028390== Rerun with --leak-check=full to see details of leaked memory
==4028390==
==4028390== For lists of detected and suppressed errors, rerun with: -s
==4028390== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
